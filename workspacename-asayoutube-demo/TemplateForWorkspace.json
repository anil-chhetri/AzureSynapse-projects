{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "workspacename-asayoutube-demo"
		},
		"workspacename-asayoutube-demo-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'workspacename-asayoutube-demo-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:workspacename-asayoutube-demo.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"workspacename-asayoutube-demo-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsyoutubedemo.dfs.core.windows.net"
		},
		"LS_JSONData_Web_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.github.com/users/hadley/orgs"
		},
		"LS_webData_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://gorest.co.in/public/v1/users"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/workspacename-asayoutube-demo-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('workspacename-asayoutube-demo-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/workspacename-asayoutube-demo-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('workspacename-asayoutube-demo-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PL_Ingest_tabularJSONData')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "get the tabular json data from web and stores the data in sql server table.",
				"activities": [
					{
						"name": "getTheTabularData",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "SqlPoolSink",
								"preCopyScript": "if object_id('tabulardata') is not null\nbegin\n\tdrop table tabulardata;\nend",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['login']"
										},
										"sink": {
											"name": "login"
										}
									},
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"name": "id"
										}
									},
									{
										"source": {
											"path": "$['node_id']"
										},
										"sink": {
											"name": "node_id"
										}
									},
									{
										"source": {
											"path": "$['url']"
										},
										"sink": {
											"name": "url"
										}
									},
									{
										"source": {
											"path": "$['repos_url']"
										},
										"sink": {
											"name": "repos_url"
										}
									},
									{
										"source": {
											"path": "$['events_url']"
										},
										"sink": {
											"name": "events_url"
										}
									},
									{
										"source": {
											"path": "$['hooks_url']"
										},
										"sink": {
											"name": "hooks_url"
										}
									},
									{
										"source": {
											"path": "$['issues_url']"
										},
										"sink": {
											"name": "issues_url"
										}
									},
									{
										"source": {
											"path": "$['members_url']"
										},
										"sink": {
											"name": "members_url"
										}
									},
									{
										"source": {
											"path": "$['public_members_url']"
										},
										"sink": {
											"name": "public_members_url"
										}
									},
									{
										"source": {
											"path": "$['avatar_url']"
										},
										"sink": {
											"name": "avatar_url"
										}
									},
									{
										"source": {
											"path": "$['description']"
										},
										"sink": {
											"name": "description"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_jsonData_Web",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SqlPoolTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_jsonData_Web')]",
				"[concat(variables('workspaceId'), '/datasets/SqlPoolTable1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LS_JSONData_Web')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('LS_JSONData_Web_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_jsonData_Web')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_JSONData_Web",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/LS_JSONData_Web')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/asa_dedicateSQL_pool')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SqlPoolTable1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "tabularData"
				},
				"sqlPool": {
					"referenceName": "asa_dedicateSQL_pool",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/asa_dedicateSQL_pool')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PL_Ingest_hierarchicalJsonData')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "this pipeline would ingest json hierarchical json data.\n",
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "SqlPoolSink",
								"preCopyScript": "if object_id('HierarchicalData') is not null\nbegin\n\tdrop table dbo.HierarchicalData;\nend",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "['id']"
										},
										"sink": {
											"name": "id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "['name']"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "['email']"
										},
										"sink": {
											"name": "email",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "['gender']"
										},
										"sink": {
											"name": "gender",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "['status']"
										},
										"sink": {
											"name": "status",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['data']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "DS_http_web",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SQLPool_Hierarchical_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_http_web')]",
				"[concat(variables('workspaceId'), '/datasets/DS_SQLPool_Hierarchical_data')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LS_webData')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('LS_webData_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_http_web')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_webData",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/LS_webData')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_SQLPool_Hierarchical_data')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "HierarchicalData"
				},
				"sqlPool": {
					"referenceName": "asa_dedicateSQL_pool",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/asa_dedicateSQL_pool')]"
			]
		}
	]
}